{
	"sections": [
		 {
			"title": "Operations",
			"columns": ["Operations", "Returns", "Description"],
			"rows": [
				{
					"Operations": "Registry(server, options)",
					"Returns": "None",
					"Description": "Following parameters should be passed to the constructor:  <ul> <li>server -  carbon server instance which we connect to the registry. This parameter is not mandatory. If we don’t provide the server, it will connect to the local server where the jaggery code will be executed. </li> <li> options - This is the json object which contain all other options to create the registry object</li><ul><pre class=\"prettyprint\">var carbon = require('carbon'); <br>var url = 'https://10.100.0.49:9443/admin/services/'; <br>var server = new carbon.server.Server(url); <br>var options = {username: 'admin',  domain: 'carbon.super' , tenantId: -1234};<br>var registry = new carbon.registry.Registry(server, options);</pre> <i> <u>username</u> - user which will be used in registry operations. Rather than sending user name we can send “system: true” in the options. then it will use the default registry system user. If we pass nothing it will use the default anonymous registry user. <br> <u>domain</u> - tenant domain for the user. This will be used to get the tenant id. <br> <u>tenantId</u> - tenant id of registry user"
				},
				{
					"Operations": "put(path, resource)",
					"Returns": "None",
					"Description": "<B> Adding a resource </B> <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li>resource - this is the json object which contains all data related to the resource which will be created. </li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><span class=\"pln\"> </span><br><span class=\"kwd\">var</span><span class=\"pln\"> resource </span><span class=\"pun\">=</span><span class=\"str\">{ \n\tcontent: 'This is a sample text.', \n\tmediaType: 'text/plain', \n\tdescription: 'This is a sample description', \n\tuuid: '0123', \n\t\tproperties:{prop1: 'val1', prop2: 'val2'}</span><span class=\"pun\">\n\t};</span><span class=\"pln\"> </span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">path,resource</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> <i> content - content of the resource. <br> mediaType - type of the resource’s content <br>description - a description about the resource. <br>uuid - <br>properties - properties of the resource. This is a json object which contains property name and its value. </i>"
				}, {
					"Operations": "put(path, collection)",
					"Returns": "None",
					"Description": "<B> Adding a collection </B> <br> Collection is also a resource which contains set of resources. Can use put method as below to add a collection. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li>collection - this is the json object which contains all data related to the collction which will be created. </li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><span class=\"pln\"> </span><br><span class=\"kwd\">var</span><span class=\"pln\"> resource </span><span class=\"pun\">=</span><span class=\"str\">{ \n\tcollection: true,\n\tdescription: 'This is a sample description', \n\tuuid: '0123', \n\t\tproperties:{prop1: 'val1', prop2: 'val2'}</span><span class=\"pun\">\n\t};</span><span class=\"pln\"> </span> <br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"str\">path,collection</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> <i> collection - boolean value to identify the resource as a collection.<br> description - a description about the resource. <br>uuid - <br>properties - properties of the resource. This is a json object which contains property name and its value. </i>"
				}, {
					"Operations": "get(path)",
					"Returns": "object",
					"Description": "<B> Retrieving a resource </B> <br> Retrieve a resource to jaggery as a json object which contains all data about the resource. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <span class=\"kwd\"><br>var</span><span class=\"pln\"> resource </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">get</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">)</span></span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "move(src, dest)",
					"Returns": "None",
					"Description": "<B> Moving a resource: </B> <br> Move a resource to a new location in registry. <br> parameters: <ul> <li>src - Current location(path) of the resource.</li> <li>dest - Destination location(path) of the resource. </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> src </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <br><span class=\"kwd\">var</span><span class=\"pln\"> dest </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/dest/sample'</span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">move</span><span class=\"pun\">(</span><span class=\"str\">src,dest</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "copy(src, dest)",
					"Returns": "None",
					"Description": "<B> Copping a resource: </B> <br> Copy a resource to a new location in registry. <br> parameters: <ul> <li>src - Current location(path) of the resource.</li> <li>dest - Destination location(path) of the resource. </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> src </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <br><span class=\"kwd\">var</span><span class=\"pln\"> dest </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/dest/sample'</span><span class=\"pun\">;</span> <br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">copy</span><span class=\"pun\">(</span><span class=\"str\">src,dest</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "rename(path, name)",
					"Returns": "None",
					"Description": "<B> Renaming a resource: </B> <br> Rename a resource to a different name. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li>name - new name for the resource. </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <br><span class=\"kwd\">var</span><span class=\"pln\"> name </span><span class=\"pun\">=</span><span class=\"str\"> 'newsample'</span><span class=\"pun\">;</span> <br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">rename</span><span class=\"pun\">(</span><span class=\"str\">path,name</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "remove(path)",
					"Returns": "None",
					"Description": "<B> Removing a resource: </B> <br> Remove a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">remove</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "exists(path)",
					"Returns": "boolean",
					"Description": "<B> Checking for the Existence of a Resource: </B> <br> Check for the existence of a resource and this method returns a boolean value. If resource exists it will return “true”. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <span class=\"kwd\"><br>var</span><span class=\"pln\"> bol </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">exists</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "tag(path, tags)",
					"Returns": "None",
					"Description": "<B> Adding tags: </B> <br> Add a tag for a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li> tags - String array which contains tags. </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> tags </span><span class=\"pun\">=</span><span class=\"pun\">[</span><span class=\"str\">'tag1','tag2'</span><span class=\"pun\">]<span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">tag</span><span class=\"pun\">(</span><span class=\"str\">path,tags</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "tags(path)",
					"Returns": "array",
					"Description": "<B> Retrieving tags: </B> <br>Retrieve all tags for a resource as a string array. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br>var</span><span class=\"pln\"> tags </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">tags</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">)</span></span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "untag(path, tags)",
					"Returns": "None",
					"Description": "<B> Removing tags: </B> <br> Remove tags from a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li> tags - String array which contains tags. </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> tags </span><span class=\"pun\">=</span><span class=\"pun\">[</span><span class=\"str\">'tag1','tag2'</span><span class=\"pun\">]<span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">untag</span><span class=\"pun\">(</span><span class=\"str\">path,tags</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "rate(path, rate)",
					"Returns": "None",
					"Description": "<B> Rating Resources: </B> <br> Rate a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li> rate - Rate for the resource. </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> rate </span><span class=\"pun\">=</span><span class=\"str\"> 3</span><span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">rate</span><span class=\"pun\">(</span><span class=\"str\">path,rate</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "addProperty(path, propName, value)",
					"Returns": "None",
					"Description": "<B> Adding a property to resource:</B> <br> Add properties to a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li>propName - name of the property</li> <li>value - value for the property </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> propName </span><span class=\"pun\">=</span><span class=\"str\"> 'prop'</span><span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> value </span><span class=\"pun\">=</span><span class=\"str\"> 'val'</span><span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">addProperty</span><span class=\"pun\">(</span><span class=\"str\">path,propName,value</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "properties(path)",
					"Returns": "object",
					"Description": "<B> Retrieving Properties: </B> <br> Return properties as a object. ex: {'prop2' : ['val2'], 'prop1' : ['val1']}<br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br>var</span><span class=\"pln\"> tags </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">tags</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">)</span></span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "rating(path, user)",
					"Returns": "object",
					"Description": "<B> Getting rating of a resource: </B> <br> Get rating of a resource as a json which contains average rating and user rating. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li> user - user name of rate to get</li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> user </span><span class=\"pun\">=</span><span class=\"str\">'admin'</span><span class=\"pun\">;</span><br>var</span><span class=\"pln\"> rating </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">rating</span><span class=\"pun\">(</span><span class=\"str\">path,user</span><span class=\"pun\">)</span></span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "unrate(path)",
					"Returns": "None",
					"Description": "<B> Unrating a resource: </B> <br> Unrating a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">unrate</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "comment(path, comment)",
					"Returns": "None",
					"Description": "<B> Adding a comment: </B> <br> Comment a resource in registry. <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <li>comment - String type comment </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <br><span class=\"kwd\">var</span><span class=\"pln\"> comment </span><span class=\"pun\">=</span><span class=\"str\"> 'this is a sample comment'</span><span class=\"pun\">;</span> <br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">comment</span><span class=\"pun\">(</span><span class=\"str\">path,comment</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "comments(path)",
					"Returns": "array",
					"Description": "<B> Checking for the Existence of a Resource: </B> <br> Returns a comment object array. <br> ex: [{'content' : 'this is a sample comment 2', 'created' : {'author' : 'admin', 'time' : 1380091607480}, 'path' : '/_system/config/wso2/sample;comments:2'},{'content' : 'this is a sample comment', 'created' : {author : admin, time : 1380091557115}, path : '/_system/config/wso2/sample;comments:1'}]<br>parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <span class=\"kwd\"><br>var</span><span class=\"pln\"> comments </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">comments</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "commentCount(path)",
					"Returns": "number",
					"Description": "<B> Getting comment count: </B> <br> Get the number of comment for a resource<br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br>var</span><span class=\"pln\"> tags </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">commentCount</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">)</span></span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "uncomment(commentPath)",
					"Returns": "None",
					"Description": "<B> Unrating a resource: </B> <br> Remove a comment for a resource in registry <br> parameters: <ul> <li>commentPath - Path for the resource in registry with comment id. </li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> commentPath </span><span class=\"pun\">=</span><span class=\"str\">/_system/config/wso2/sample;comments:2'</span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">uncomment</span><span class=\"pun\">(</span><span class=\"str\">commentPath</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "version(path)",
					"Returns": "None",
					"Description": "<B> Versioning a resource: </B> <br> Versioning a resource in registry <br> parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">version</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "versions(path)",
					"Returns": "array",
					"Description": "<B> Getting versions of a resource: </B> <br> Returns an array of resource paths with version. <br> ex: ['/_system/config/wso2/sample;version:59', '/_system/config/wso2/sample;version:58']<br>parameters: <ul> <li>path - Path for the resource in registry. (resource path)</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span> <span class=\"kwd\"><br>var</span><span class=\"pln\"> versions </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">versions</span><span class=\"pun\">(</span><span class=\"str\">path</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "restore(versionPath)",
					"Returns": "None",
					"Description": "<B> Restoring a resource: </B> <br>  Restore a resource to a previous version. <br> parameters: <ul> <li>versionPath - Path for the resource in registry with version</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> versionPath </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample;version:5'</span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">version</span><span class=\"pun\">(</span><span class=\"str\">versionPath</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "unversion(path, versionId)",
					"Returns": "None",
					"Description": "<B> Removing a version of resource:</B> <br> Remove a previous version of a resource from the version history.<ul> <li>path - Path for the resource in registry. (resource path)</li> <li> versionId - Id of the version to be removed </li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> path </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> versionId </span><span class=\"pun\">=</span><span class=\"str\"> 4</span><span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">rate</span><span class=\"pun\">(</span><span class=\"str\">path,versionId</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "link(linkPath, target)",
					"Returns": "None",
					"Description": "<B> Linking a resource:</B> <br> Link a resource to another resource path.<ul> <li>linkPath - resource path where the link will be created.</li> <li> target - resource path where the resource is exists.</li><ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> linkPath  </span><span class=\"pun\">=</span><span class=\"str\">'/_system/local/wso2/sample'</span><span class=\"pun\">;</span><br><span class=\"kwd\">var</span><span class=\"pln\"> target</span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/wso2/sample'</span><span class=\"str\"></span><span class=\"pun\">;</span><br><span class=\"pln\">registry</span><span class=\"pun\">.</span><span class=\"pln\">link</span><span class=\"pun\">(</span><span class=\"str\">linkPath,target</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				},{
					"Operations": "versions(path)",
					"Returns": "array",
					"Description": "<B> Executing a query: </B> <br> can execute a query stored in registry. The query should be stored as “mediaType: 'application/vnd.sql.query' ”. <br> parameters: <ul> <li>qpath - resource path to the query</li> <ul><pre class=\"prettyprint\"><span class=\"kwd\">var</span><span class=\"pln\"> qpath </span><span class=\"pun\">=</span><span class=\"str\">'/_system/config/repository/components/org.wso2.carbon.registry/queries/allTags'</span><span class=\"pun\">;</span> <span class=\"kwd\"><br>var</span><span class=\"pln\"> qresults </span><span class=\"pun\">=</span><span class=\"pln\"> registry</span><span class=\"pun\">.</span><span class=\"pln\">query</span><span class=\"pun\">(</span><span class=\"str\">qpath</span><span class=\"pun\">);</span><span class=\"pln\">\n</span></pre> "
				}
			]
		}
	]
}